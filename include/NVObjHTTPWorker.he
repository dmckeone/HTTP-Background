//
//  NVObjHTTPWorker.he
//  PostgreSQLBackground
//
//  Created by David McKeone on 11-10-21.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#ifndef NV_OBJ_HTTP_WORKER_HE
#define NV_OBJ_HTTP_WORKER_HE

#include <boost/asio.hpp>
#include <boost/shared_ptr.hpp> 

#include "NVObjBase.he"
#include "Worker.h"

class NVObjHTTPWorker : public NVObjBase {
public:
    // Static tracking variable
	static qshort objResourceId;  // This static variable needs to be in all inherited objects
    
    // Constructor / Destructor
    NVObjHTTPWorker(qobjinst objinst, OmnisTools::tThreadData* pThreadData);
    ~NVObjHTTPWorker();
    
    // Thread timer
    virtual int notify();
    
	// Methods Available and Method Call Handling
	virtual qlong returnMethods( OmnisTools::tThreadData* pThreadData );
	virtual qlong methodCall( OmnisTools::tThreadData* pThreadData );
    
	// Properties and Property Call Handling
	virtual qlong returnProperties( OmnisTools::tThreadData* pThreadData );
	virtual qlong getProperty( OmnisTools::tThreadData* pThreadData );
	virtual qlong setProperty( OmnisTools::tThreadData* pThreadData );
	virtual qlong canAssignProperty( OmnisTools::tThreadData* pThreadData, qlong propID );
protected:
    
private:
    boost::shared_ptr<Worker> _worker;
    
    // Methods
	OmnisTools::tResult methodInitialize( OmnisTools::tThreadData* pThreadData, qshort pParamCount );
    OmnisTools::tResult methodRun( OmnisTools::tThreadData* pThreadData, qshort pParamCount );
    OmnisTools::tResult methodStart( OmnisTools::tThreadData* pThreadData, qshort pParamCount );
    OmnisTools::tResult methodCancel( OmnisTools::tThreadData* pThreadData, qshort pParamCount );
};

#endif /* NV_OBJ_HTTP_WORKER_HE */